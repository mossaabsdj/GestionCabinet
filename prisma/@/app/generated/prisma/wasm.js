
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  age: 'age',
  dateDeNaissance: 'dateDeNaissance',
  telephone: 'telephone',
  adresse: 'adresse',
  antecedents: 'antecedents',
  poidsDeNaissance: 'poidsDeNaissance',
  groupeSanguin: 'groupeSanguin',
  createdAt: 'createdAt'
};

exports.Prisma.ConsultationScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  note: 'note',
  taille: 'taille',
  poids: 'poids',
  tensionSystolique: 'tensionSystolique',
  tensionDiastolique: 'tensionDiastolique',
  temperature: 'temperature',
  frequenceCardiaque: 'frequenceCardiaque',
  frequenceRespiratoire: 'frequenceRespiratoire',
  saturationOxygene: 'saturationOxygene',
  glycemie: 'glycemie',
  createdAt: 'createdAt',
  developpementPsychomoteur: 'developpementPsychomoteur'
};

exports.Prisma.RadioScalarFieldEnum = {
  id: 'id',
  consultationId: 'consultationId',
  patientId: 'patientId',
  description: 'description',
  fichier: 'fichier',
  createdAt: 'createdAt'
};

exports.Prisma.BilanFileScalarFieldEnum = {
  id: 'id',
  consultationId: 'consultationId',
  patientId: 'patientId',
  type: 'type',
  description: 'description',
  fichier: 'fichier',
  createdAt: 'createdAt'
};

exports.Prisma.OrdonnanceScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  consultationId: 'consultationId',
  createdAt: 'createdAt'
};

exports.Prisma.OrdonnanceItemScalarFieldEnum = {
  id: 'id',
  ordonnanceId: 'ordonnanceId',
  medicamentId: 'medicamentId',
  dosage: 'dosage',
  frequence: 'frequence',
  duree: 'duree',
  quantite: 'quantite'
};

exports.Prisma.MedicamentScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  createdAt: 'createdAt'
};

exports.Prisma.BilanScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  createdAt: 'createdAt'
};

exports.Prisma.BilanRecipScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  consultationId: 'consultationId',
  createdAt: 'createdAt'
};

exports.Prisma.BilanItemScalarFieldEnum = {
  id: 'id',
  bilanRecipId: 'bilanRecipId',
  bilanId: 'bilanId',
  resultat: 'resultat',
  remarque: 'remarque'
};

exports.Prisma.BilanTypeScalarFieldEnum = {
  id: 'id',
  nom: 'nom'
};

exports.Prisma.BilanTypeItemScalarFieldEnum = {
  id: 'id',
  bilanTypeId: 'bilanTypeId',
  bilanId: 'bilanId',
  remarque: 'remarque'
};

exports.Prisma.RecetteTypeScalarFieldEnum = {
  id: 'id',
  nom: 'nom'
};

exports.Prisma.RecetteTypeItemScalarFieldEnum = {
  id: 'id',
  recetteId: 'recetteId',
  medicamentId: 'medicamentId',
  dosage: 'dosage',
  frequence: 'frequence',
  duree: 'duree',
  quantite: 'quantite'
};

exports.Prisma.PaiementScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  montant: 'montant',
  date: 'date'
};

exports.Prisma.VaccineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.VaccinationScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  vaccineId: 'vaccineId',
  dateGiven: 'dateGiven',
  doseNumber: 'doseNumber',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.PatientOrderByRelevanceFieldEnum = {
  nom: 'nom',
  telephone: 'telephone',
  adresse: 'adresse',
  antecedents: 'antecedents'
};

exports.Prisma.ConsultationOrderByRelevanceFieldEnum = {
  note: 'note',
  developpementPsychomoteur: 'developpementPsychomoteur'
};

exports.Prisma.RadioOrderByRelevanceFieldEnum = {
  description: 'description',
  fichier: 'fichier'
};

exports.Prisma.BilanFileOrderByRelevanceFieldEnum = {
  type: 'type',
  description: 'description',
  fichier: 'fichier'
};

exports.Prisma.OrdonnanceItemOrderByRelevanceFieldEnum = {
  dosage: 'dosage',
  frequence: 'frequence',
  duree: 'duree'
};

exports.Prisma.MedicamentOrderByRelevanceFieldEnum = {
  nom: 'nom'
};

exports.Prisma.BilanOrderByRelevanceFieldEnum = {
  nom: 'nom'
};

exports.Prisma.BilanItemOrderByRelevanceFieldEnum = {
  resultat: 'resultat',
  remarque: 'remarque'
};

exports.Prisma.BilanTypeOrderByRelevanceFieldEnum = {
  nom: 'nom'
};

exports.Prisma.BilanTypeItemOrderByRelevanceFieldEnum = {
  remarque: 'remarque'
};

exports.Prisma.RecetteTypeOrderByRelevanceFieldEnum = {
  nom: 'nom'
};

exports.Prisma.RecetteTypeItemOrderByRelevanceFieldEnum = {
  dosage: 'dosage',
  frequence: 'frequence',
  duree: 'duree'
};

exports.Prisma.VaccineOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.VaccinationOrderByRelevanceFieldEnum = {
  notes: 'notes'
};
exports.GroupeSanguin = exports.$Enums.GroupeSanguin = {
  A_POS: 'A_POS',
  A_NEG: 'A_NEG',
  B_POS: 'B_POS',
  B_NEG: 'B_NEG',
  AB_POS: 'AB_POS',
  AB_NEG: 'AB_NEG',
  O_POS: 'O_POS',
  O_NEG: 'O_NEG'
};

exports.Prisma.ModelName = {
  Patient: 'Patient',
  Consultation: 'Consultation',
  Radio: 'Radio',
  BilanFile: 'BilanFile',
  Ordonnance: 'Ordonnance',
  OrdonnanceItem: 'OrdonnanceItem',
  Medicament: 'Medicament',
  Bilan: 'Bilan',
  BilanRecip: 'BilanRecip',
  BilanItem: 'BilanItem',
  BilanType: 'BilanType',
  BilanTypeItem: 'BilanTypeItem',
  RecetteType: 'RecetteType',
  RecetteTypeItem: 'RecetteTypeItem',
  Paiement: 'Paiement',
  Vaccine: 'Vaccine',
  Vaccination: 'Vaccination'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ANIS INFO\\Desktop\\Amel\\app\\prisma\\@\\app\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ANIS INFO\\Desktop\\Amel\\app\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// ====================\n// Prisma Configuration\n// ====================\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"@/app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ====================\n// Enums\n// ====================\n\nenum GroupeSanguin {\n  A_POS\n  A_NEG\n  B_POS\n  B_NEG\n  AB_POS\n  AB_NEG\n  O_POS\n  O_NEG\n}\n\n// ====================\n// Main Models\n// ====================\n\nmodel Patient {\n  id               Int            @id @default(autoincrement())\n  nom              String         @unique\n  age              Int?\n  dateDeNaissance  DateTime\n  telephone        String?\n  adresse          String?\n  antecedents      String?\n  poidsDeNaissance Float?\n  groupeSanguin    GroupeSanguin?\n  consultations    Consultation[]\n  ordonnances      Ordonnance[]\n  bilans           BilanRecip[]\n  paiements        Paiement[]\n  radios           Radio[]\n  bilanFiles       BilanFile[]\n  vaccinations     Vaccination[]\n  createdAt        DateTime       @default(now())\n}\n\nmodel Consultation {\n  id                        Int         @id @default(autoincrement())\n  patientId                 Int\n  patient                   Patient     @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  note                      String?\n  taille                    Float?\n  poids                     Float?\n  tensionSystolique         Int?\n  tensionDiastolique        Int?\n  temperature               Float?\n  frequenceCardiaque        Int?\n  frequenceRespiratoire     Int?\n  saturationOxygene         Int?\n  glycemie                  Float?\n  radios                    Radio[]\n  bilansFiles               BilanFile[]\n  ordonnance                Ordonnance?\n  bilanRecip                BilanRecip?\n  createdAt                 DateTime    @default(now())\n  developpementPsychomoteur String?\n}\n\nmodel Radio {\n  id             Int           @id @default(autoincrement())\n  consultationId Int?\n  consultation   Consultation? @relation(fields: [consultationId], references: [id], onDelete: Cascade)\n  patientId      Int?\n  patient        Patient?      @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  description    String?\n  fichier        String?\n  createdAt      DateTime      @default(now())\n}\n\nmodel BilanFile {\n  id             Int           @id @default(autoincrement())\n  consultationId Int?\n  consultation   Consultation? @relation(fields: [consultationId], references: [id], onDelete: Cascade)\n  patientId      Int?\n  patient        Patient?      @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  type           String?\n  description    String?\n  fichier        String?\n  createdAt      DateTime      @default(now())\n}\n\n// ====================\n// Ordonnances\n// ====================\n\nmodel Ordonnance {\n  id             Int              @id @default(autoincrement())\n  patientId      Int\n  patient        Patient          @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  consultationId Int              @unique\n  consultation   Consultation?    @relation(fields: [consultationId], references: [id], onDelete: Cascade)\n  items          OrdonnanceItem[]\n  createdAt      DateTime         @default(now())\n}\n\nmodel OrdonnanceItem {\n  id           Int        @id @default(autoincrement())\n  ordonnanceId Int\n  ordonnance   Ordonnance @relation(fields: [ordonnanceId], references: [id], onDelete: Cascade)\n  medicamentId Int\n  medicament   Medicament @relation(fields: [medicamentId], references: [id])\n  dosage       String?\n  frequence    String?\n  duree        String?\n  quantite     Int?\n}\n\n// ====================\n// Médicaments\n// ====================\n\nmodel Medicament {\n  id               Int               @id @default(autoincrement())\n  nom              String            @unique\n  ordonnanceItems  OrdonnanceItem[]\n  recetteTypeItems RecetteTypeItem[]\n  createdAt        DateTime          @default(now())\n}\n\n// ====================\n// Bilans\n// ====================\n\nmodel Bilan {\n  id             Int             @id @default(autoincrement())\n  nom            String          @unique\n  bilanTypeItems BilanTypeItem[]\n  BilanItems     BilanItem[]\n  createdAt      DateTime        @default(now())\n}\n\nmodel BilanRecip {\n  id             Int           @id @default(autoincrement())\n  patientId      Int\n  patient        Patient       @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  consultationId Int           @unique\n  consultation   Consultation? @relation(fields: [consultationId], references: [id], onDelete: Cascade)\n  items          BilanItem[]\n  createdAt      DateTime      @default(now())\n}\n\nmodel BilanItem {\n  id           Int        @id @default(autoincrement())\n  bilanRecipId Int\n  bilanRecip   BilanRecip @relation(fields: [bilanRecipId], references: [id], onDelete: Cascade)\n  bilanId      Int\n  bilan        Bilan      @relation(fields: [bilanId], references: [id])\n  resultat     String?\n  remarque     String?\n}\n\n// ====================\n// Types de Bilan\n// ====================\n\nmodel BilanType {\n  id    Int             @id @default(autoincrement())\n  nom   String\n  items BilanTypeItem[]\n}\n\nmodel BilanTypeItem {\n  id          Int       @id @default(autoincrement())\n  bilanTypeId Int\n  bilanType   BilanType @relation(fields: [bilanTypeId], references: [id], onDelete: Cascade)\n  bilanId     Int\n  bilan       Bilan     @relation(fields: [bilanId], references: [id])\n  remarque    String?\n}\n\n// ====================\n// Recettes Types\n// ====================\n\nmodel RecetteType {\n  id    Int               @id @default(autoincrement())\n  nom   String\n  items RecetteTypeItem[]\n}\n\nmodel RecetteTypeItem {\n  id           Int         @id @default(autoincrement())\n  recetteId    Int\n  recette      RecetteType @relation(fields: [recetteId], references: [id], onDelete: Cascade)\n  medicamentId Int\n  medicament   Medicament  @relation(fields: [medicamentId], references: [id])\n  dosage       String?\n  frequence    String?\n  duree        String?\n  quantite     Int?\n}\n\n// ====================\n// Paiements\n// ====================\n\nmodel Paiement {\n  id        Int      @id @default(autoincrement())\n  patientId Int\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  montant   Float\n  date      DateTime @default(now())\n}\n\n// ====================\n// Vaccinations\n// ====================\n\nmodel Vaccine {\n  id           Int           @id @default(autoincrement())\n  name         String        @unique\n  createdAt    DateTime      @default(now())\n  vaccinations Vaccination[]\n}\n\nmodel Vaccination {\n  id         Int      @id @default(autoincrement())\n  patientId  Int\n  patient    Patient? @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  vaccineId  Int\n  vaccine    Vaccine  @relation(fields: [vaccineId], references: [id])\n  dateGiven  DateTime\n  doseNumber Int?\n  notes      String?\n  createdAt  DateTime @default(now())\n}\n",
  "inlineSchemaHash": "3903a3bce8a7a8595daccdfa05553924d734d1563a433b82b67cc55ec946a3a0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateDeNaissance\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"telephone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adresse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"antecedents\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poidsDeNaissance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"groupeSanguin\",\"kind\":\"enum\",\"type\":\"GroupeSanguin\"},{\"name\":\"consultations\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"ConsultationToPatient\"},{\"name\":\"ordonnances\",\"kind\":\"object\",\"type\":\"Ordonnance\",\"relationName\":\"OrdonnanceToPatient\"},{\"name\":\"bilans\",\"kind\":\"object\",\"type\":\"BilanRecip\",\"relationName\":\"BilanRecipToPatient\"},{\"name\":\"paiements\",\"kind\":\"object\",\"type\":\"Paiement\",\"relationName\":\"PaiementToPatient\"},{\"name\":\"radios\",\"kind\":\"object\",\"type\":\"Radio\",\"relationName\":\"PatientToRadio\"},{\"name\":\"bilanFiles\",\"kind\":\"object\",\"type\":\"BilanFile\",\"relationName\":\"BilanFileToPatient\"},{\"name\":\"vaccinations\",\"kind\":\"object\",\"type\":\"Vaccination\",\"relationName\":\"PatientToVaccination\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Consultation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ConsultationToPatient\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taille\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"poids\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tensionSystolique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tensionDiastolique\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"temperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"frequenceCardiaque\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"frequenceRespiratoire\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"saturationOxygene\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"glycemie\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"radios\",\"kind\":\"object\",\"type\":\"Radio\",\"relationName\":\"ConsultationToRadio\"},{\"name\":\"bilansFiles\",\"kind\":\"object\",\"type\":\"BilanFile\",\"relationName\":\"BilanFileToConsultation\"},{\"name\":\"ordonnance\",\"kind\":\"object\",\"type\":\"Ordonnance\",\"relationName\":\"ConsultationToOrdonnance\"},{\"name\":\"bilanRecip\",\"kind\":\"object\",\"type\":\"BilanRecip\",\"relationName\":\"BilanRecipToConsultation\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"developpementPsychomoteur\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Radio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"consultationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"ConsultationToRadio\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToRadio\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fichier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BilanFile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"consultationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"BilanFileToConsultation\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"BilanFileToPatient\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fichier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Ordonnance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"OrdonnanceToPatient\"},{\"name\":\"consultationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"ConsultationToOrdonnance\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrdonnanceItem\",\"relationName\":\"OrdonnanceToOrdonnanceItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OrdonnanceItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ordonnanceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ordonnance\",\"kind\":\"object\",\"type\":\"Ordonnance\",\"relationName\":\"OrdonnanceToOrdonnanceItem\"},{\"name\":\"medicamentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"medicament\",\"kind\":\"object\",\"type\":\"Medicament\",\"relationName\":\"MedicamentToOrdonnanceItem\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequence\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantite\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Medicament\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ordonnanceItems\",\"kind\":\"object\",\"type\":\"OrdonnanceItem\",\"relationName\":\"MedicamentToOrdonnanceItem\"},{\"name\":\"recetteTypeItems\",\"kind\":\"object\",\"type\":\"RecetteTypeItem\",\"relationName\":\"MedicamentToRecetteTypeItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Bilan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bilanTypeItems\",\"kind\":\"object\",\"type\":\"BilanTypeItem\",\"relationName\":\"BilanToBilanTypeItem\"},{\"name\":\"BilanItems\",\"kind\":\"object\",\"type\":\"BilanItem\",\"relationName\":\"BilanToBilanItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BilanRecip\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"BilanRecipToPatient\"},{\"name\":\"consultationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"consultation\",\"kind\":\"object\",\"type\":\"Consultation\",\"relationName\":\"BilanRecipToConsultation\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"BilanItem\",\"relationName\":\"BilanItemToBilanRecip\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"BilanItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bilanRecipId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bilanRecip\",\"kind\":\"object\",\"type\":\"BilanRecip\",\"relationName\":\"BilanItemToBilanRecip\"},{\"name\":\"bilanId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bilan\",\"kind\":\"object\",\"type\":\"Bilan\",\"relationName\":\"BilanToBilanItem\"},{\"name\":\"resultat\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remarque\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"BilanType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"BilanTypeItem\",\"relationName\":\"BilanTypeToBilanTypeItem\"}],\"dbName\":null},\"BilanTypeItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bilanTypeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bilanType\",\"kind\":\"object\",\"type\":\"BilanType\",\"relationName\":\"BilanTypeToBilanTypeItem\"},{\"name\":\"bilanId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bilan\",\"kind\":\"object\",\"type\":\"Bilan\",\"relationName\":\"BilanToBilanTypeItem\"},{\"name\":\"remarque\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"RecetteType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"RecetteTypeItem\",\"relationName\":\"RecetteTypeToRecetteTypeItem\"}],\"dbName\":null},\"RecetteTypeItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recetteId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"recette\",\"kind\":\"object\",\"type\":\"RecetteType\",\"relationName\":\"RecetteTypeToRecetteTypeItem\"},{\"name\":\"medicamentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"medicament\",\"kind\":\"object\",\"type\":\"Medicament\",\"relationName\":\"MedicamentToRecetteTypeItem\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequence\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantite\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Paiement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PaiementToPatient\"},{\"name\":\"montant\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Vaccine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vaccinations\",\"kind\":\"object\",\"type\":\"Vaccination\",\"relationName\":\"VaccinationToVaccine\"}],\"dbName\":null},\"Vaccination\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToVaccination\"},{\"name\":\"vaccineId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"vaccine\",\"kind\":\"object\",\"type\":\"Vaccine\",\"relationName\":\"VaccinationToVaccine\"},{\"name\":\"dateGiven\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"doseNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

